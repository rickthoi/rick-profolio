//declare variables
$primary-color: #444;
// $secondary-color: #eece18;
$secondary-color: orange;
$third-color: red;
$show-home-image: true;
$home-image: url(../img/background.jpg);
$background-opacity: 0.8;

//like function easeOut
@mixin easeOut {
  transition: all 0.5s ease-out;
}

//image background and overlay
@mixin background {
  @if $show-home-image {
    &#bg-img {
      background: $home-image;
      background-attachment: fixed;
      background-size: cover;
      overflow: hidden;
      //.overlaycover entire screen
      //sudo element so that doesn't have div element in index.html
      //$:after inside content: '' (no text)
      &:after {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        //below text content
        z-index: -1;
        //opacity for overlay
        background: rgba($primary-color, $background-opacity);
        // overflow-y: hidden;
      }
    }
  }
}

//Function Set Color if $primary-color is white
// and pass in with any color property has a white color
@function set-text-color($color) {
  @if (lightness($color) > 40) {
    @return #000;
  } @else {
    @return #fff;
  }
}

// Media Query Mixins
@mixin mediaSm {
  //css will fire only screen size goes at 500 px or less
  @media screen and (max-width: 500px) {
    @content;
  }
}

@mixin mediaMd {
  //css will fire only screen size goes below at 768px px
  @media screen and (max-width: 768px) {
    @content;
  }
}

@mixin mediaLg {
  //css will fire only screen size goes between at 769px and 1170px
  @media screen and (min-width: 769px) and (max-width: 1170px) {
    @content;
  }
}
@mixin mediaXl {
  //css will fire only screen size goes at least 1170 px
  @media screen and (min-width: 1171px) {
    @content;
  }
}
